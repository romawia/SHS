;VNS_Chris__ ARTIFICIAL INTELLIGENCE
;October 2003 by VNS_Tsubasa
;email: quoc383011@mail15.com

;DEFINE
;Constants
; goals
(defconst GOAL-RESEARCHING-FEUDAL 1)
(defconst GOAL-READY-FOR-CASTLE 2)
(defconst GOAL-RESEARCHING-CASTLE 3)
(defconst GOAL-I-AM-THE-SHOT 4)
(defconst GOAL-FIRST-RUCH 5)
(defconst GOAL-SLING-SUSPEND-TRIBUTE 6)
(defconst GOAL-START-THE-IMPERIAL-ARMY 7)
(defconst GOAL-NO-WOOD-NEEDED 8)
(defconst GOAL-NO-FOOD-NEEDED 9)
(defconst GOAL-NO-GOLD-NEEDED 10)
(defconst GOAL-NO-STONE-NEEDED 11)
(defconst GOAL-MOBILISE-DEFENCE 12)
(defconst GOAL-FAST-ATTACK 13)
(defconst GOAL-RESEARCHING-PALADIN 14)
(defconst GOAL-PROTEST-MONK 15)
(defconst GOAL-FIGHT-MONK 16)
(defconst GOAL-PROTEST-KNIGHT 17)
(defconst GOAL-RESEARCHING-IMPERIAL 18)
(defconst GOAL-FIND-ENEMY 19)
(defconst GOAL-PROTEST-ARCHER 20)
(defconst GOAL-PROTEST-FRUSH 21)
(defconst GOAL-RESIGN 22)
(defconst GOAL-PROTECT-EAGLE 23)
(defconst GOAL-CHEATS-NOW 24)

; timers
(defconst TIMER-CASTLE-ATTACK 1)
(defconst TIMER-ATTACK 2)
(defconst TIMER-CALL-HELP 3)
(defconst TIMER-UNDER-ATTACK 4)
(defconst TIMER-RUSH-TIMEOUT 5)
(defconst TIMER-SCOUT-ATTACK 6)
(defconst TIMER-RESIGN-DELAY 7)
(defconst TIMER-CHEATS-NOW 8)
; start
(defrule
	(true)
=>
	(set-goal GOAL-NO-WOOD-NEEDED 0)
	(set-goal GOAL-NO-FOOD-NEEDED 0)
	(set-goal GOAL-NO-GOLD-NEEDED 0)
	(set-goal GOAL-NO-STONE-NEEDED 0)
	(set-goal GOAL-MOBILISE-DEFENCE 0)
	(set-goal GOAL-RESEARCHING-FEUDAL 0)
	(set-goal GOAL-FIRST-RUCH 1)
	(set-goal GOAL-READY-FOR-CASTLE 0)
	(set-goal GOAL-RESEARCHING-CASTLE 0)
	(set-goal GOAL-I-AM-THE-SHOT 1)
	(set-goal GOAL-SLING-SUSPEND-TRIBUTE 0)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 0)
	(set-goal GOAL-FAST-ATTACK 0)
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal GOAL-CHEATS-NOW 0)
	(set-goal GOAL-PROTECT-EAGLE 0)
	(set-goal GOAL-FIND-ENEMY 0)
	(set-goal GOAL-PROTEST-FRUSH 0)
	(set-goal GOAL-MOBILISE-DEFENCE 0)
	(set-goal GOAL-RESEARCHING-PALADIN 0)
	(set-goal GOAL-PROTEST-MONK 0)
	(set-goal GOAL-FIGHT-MONK 0)
	(set-goal GOAL-PROTEST-KNIGHT 0)
	(set-goal GOAL-RESEARCHING-IMPERIAL 0)
	(set-goal GOAL-PROTEST-ARCHER 0)
	(disable-self)
)

;RESEARCH
; town center
(defrule
	(civ-selected chinese)
	(not (can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
	(chat-local-to-self "Na^ng ca^'p Loom")
	(disable-self)
)

(defrule
	(current-age >= feudal-age)
	(can-research ri-loom)
=>
	(chat-local-to-self "Na^ng ca^'p Loom")
	(research ri-loom)
)

(defrule
	(current-age == dark-age)
	(can-research feudal-age)
=>
	(chat-to-allies "Ba't da^`u le^n Feudal Age")
	(research feudal-age)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-camp-max-distance 20)
	(cc-add-resource 150 wood)
	(set-goal GOAL-RESEARCHING-FEUDAL 1)
)

(defrule
	(current-age == feudal-age)
	(can-research castle-age)
=>
	(research castle-age)
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-goal GOAL-RESEARCHING-CASTLE 1)
)

(defrule
	(current-age >= castle-age)
	(can-research imperial-age)
	(goal GOAL-FAST-ATTACK 0)
=>
	(chat-to-all "8 Resign or I’ll kill you")
	(chat-local-to-self "Chua^n bi. le^n imperial age")
	(research imperial-age)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-wood-gatherer-percentage 15)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 10)
	(set-goal GOAL-RESEARCHING-IMPERIAL 1)
)

(defrule
	(unit-type-count-total villager > 18)
	(can-research ri-wheel-barrow)
=>
	(chat-local-to-self "Na^ng ca^'p wheel barrow")
	(research ri-wheel-barrow)
)

(defrule
	(can-research ri-hand-cart)
=>
	(research ri-hand-cart)
	(chat-local-to-self "Na^ng ca^'p hand cart")
)

(defrule
	(can-research ri-town-watch)
	(research-completed ri-conscription)
=>
	(chat-local-to-self "Na^ng ca^'p town-watch")
	(research ri-town-watch)
)

(defrule
	(can-research ri-town-patrol)
=>
	(chat-local-to-self "Na^ng ca^'p town-patrol")
	(research ri-town-patrol)
)

; mills & camps
(defrule
	(can-research ri-double-bit-axe)
=>
	(cc-add-resource food 200)
	(cc-add-resource wood 200)
	(research ri-double-bit-axe)
	(chat-local-to-self "Na^ng ca^'p double bit axe")
)

(defrule
	(can-research ri-gold-mining)
=>
	(cc-add-resource food 200)
	(cc-add-resource wood 150)
	(research ri-gold-mining)
	(chat-local-to-self "Na^ng ca^'p gold mining")
)

(defrule
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
	(chat-local-to-self "Na^ng ca^'p horse collar")
)

(defrule
	(can-research ri-bow-saw)
=>
	(cc-add-resource food 300)
	(cc-add-resource wood 300)
	(research ri-bow-saw)
	(chat-local-to-self "Na^ng ca^'p bow-saw")
)

(defrule
	(can-research ri-heavy-plow)
=>
	(research ri-heavy-plow)
	(chat-local-to-self "Na^ng ca^'p heavy-plow")
)

(defrule
	(can-research ri-two-man-saw)
=>
	(research ri-two-man-saw)
	(chat-local-to-self "Na^ng ca^'p two-man-saw")
)

(defrule
	(research-completed ri-conscription)
	(can-research ri-crop-rotation)
	(goal GOAL-FAST-ATTACK 0)
=>
	(research ri-crop-rotation)
	(chat-local-to-self "Na^ng ca^'p crop-rotation")
)

(defrule
	(goal GOAL-RESEARCHING-IMPERIAL 1)
	(can-research ri-stone-mining)
=>
	(research ri-stone-mining)
	(chat-local-to-self "Na^ng ca^'p stone-mining")
)

(defrule
	(can-research ri-gold-shaft-mining)
	(research-completed ri-conscription)
=>
	(research ri-gold-shaft-mining)
	(chat-local-to-self "Na^ng ca^'p gold-shaft-mining")
)

(defrule
	(research-completed ri-conscription)
	(can-research ri-stone-shaft-mining)
=>
	(research ri-stone-shaft-mining)
	(chat-local-to-self "Na^ng ca^'p stone-shaft-mining")
)

; blacksmith
(defrule
	(soldier-count >= 5)
	(can-research ri-scale-mail)
=>
	(cc-add-resource food 150)
	(chat-local-to-self "Na^ng ca^'p scale-mail")
	(research ri-scale-mail)
)

(defrule
	(current-age >= castle-age)
	(or (goal GOAL-FAST-ATTACK 1)
		(goal GOAL-START-THE-IMPERIAL-ARMY 1))
	(can-research ri-forging)
=>
	(chat-local-to-self "Na^ng ca^'p forging")
	(research ri-forging)
)

(defrule
	(current-age >= castle-age)
	(unit-type-count-total skirmisher-line >= 5)
	(can-research ri-fletching)
=>
	(cc-add-resource food 300)
	(cc-add-resource wood 300)
	(research ri-fletching)
	(chat-local-to-self "Na^ng ca^'p fletching")
)

(defrule
	(unit-type-count-total militiaman-line >= 15)
	(can-research ri-chain-mail)
=>
	(chat-local-to-self "Na^ng ca^'p chain-mail")
	(research ri-chain-mail)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-iron-casting)
=>
	(chat-local-to-self "Na^ng ca^'p iron-casting")
	(research ri-iron-casting)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(current-age >= castle-age)
	(unit-type-count-total skirmisher-line > 10)
	(can-research ri-bodkin-arrow)
=>
	(chat-local-to-self "Na^ng ca^'p bodkin arrow")
	(research ri-bodkin-arrow)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-plate-mail)
=>
	(chat-local-to-self "Na^ng ca^'p plate-mail")
	(research ri-plate-mail)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

(defrule
	(unit-type-count-total spearman-line > 30)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-padded-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p padded-archer-armor")
	(research ri-padded-archer-armor)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 25)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-bracer)
=>
	(chat-local-to-self "Na^ng ca^'p bracer")
	(research ri-bracer)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 32)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-leather-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p leather-archer-armor")
	(research ri-leather-archer-armor)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 35)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-ring-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p ring-archer-armor")
	(research ri-ring-archer-armor)
)

(defrule
	(gold-amount > 2100)
	(can-research ri-scale-barding)
=>
	(chat-local-to-self "Na^ng ca^'p scale-barding")
	(research ri-scale-barding)
	(disable-self)
)

(defrule
	(gold-amount > 2100)
	(can-research ri-plate-barding)
=>
	(chat-local-to-self "Na^ng ca^'p plate-barding")
	(research ri-plate-barding)
	(disable-self)
)

(defrule
	(gold-amount > 2100)
	(can-research ri-chain-barding)
=>
	(chat-local-to-self "Na^ng ca^'p chain-barding")
	(research ri-chain-barding)
	(disable-self)
)

; barrack
(defrule
	(building-type-count-total castle >= 2)
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-tracking)
=>
	(chat-local-to-self "Na^ng ca^'p tracking")
	(research ri-tracking)
)
(defrule
	(current-age >= castle-age)
	(unit-type-count-total militiaman-line >= 16)
	(can-research ri-squires)
=>
	(chat-local-to-self "Na^ng ca^'p squires")
	(research ri-squires)
)
(defrule
	(goal GOAL-RESEARCHING-CASTLE 1)
	(unit-type-count-total militiaman-line >= 2)
	(can-research ri-man-at-arms)
=>
	(chat-local-to-self "Na^ng ca^'p man-at-arms")
	(research ri-man-at-arms)
)

(defrule
	(unit-type-count-total militiaman-line >= 4)
	(can-research ri-long-swordsman)
=>
	(cc-add-resource food 200)
	(cc-add-resource wood 300)
	(chat-local-to-self "Na^ng ca^'p long-swordsman")
	(research ri-long-swordsman)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-two-handed-swordsman)
=>
	(chat-local-to-self "Na^ng ca^'p two-handed-swordsman")
	(research ri-two-handed-swordsman)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-champion)
=>
	(chat-local-to-self "Na^ng ca^'p champion")
	(research ri-champion)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 1)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-pikeman)
	(unit-type-count-total spearman-line > 4)
=>
	(chat-local-to-self "Na^ng ca^'p pikeman")
	(research ri-pikeman)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-halberdier)
	(unit-type-count-total spearman-line >= 15)
=>
	(chat-local-to-self "Na^ng ca^'p halberdier")
	(research ri-halberdier)
)

(defrule
	(current-age == imperial-age)
	(research-completed ri-pikeman)
	(gold-amount > 1900)
	(can-research ri-elite-eagle-warrior)
=>
	(chat-local-to-self "Na^ng ca^'p eagle-warrior")
	(research ri-elite-eagle-warrior)
	(disable-self)
)

; archery range
(defrule
	(current-age >= castle-age)
	(unit-type-count-total skirmisher-line > 10)
	(can-research ri-elite-skirmisher)
=>
	(chat-local-to-self "Na^ng ca^'p elite-skirmisher")
	(research ri-elite-skirmisher)
)

(defrule
	(gold-amount > 3100)
	(can-research ri-crossbow)
=>
	(chat-local-to-self "Na^ng ca^'p crossbow")
	(research ri-crossbow)
	(disable-self)
)

(defrule
	(gold-amount > 3100)
	(can-research ri-arbalest)
=>
	(chat-local-to-self "Na^ng ca^'p arbalest")
	(research ri-arbalest)
	(disable-self)
)

(defrule
	(gold-amount > 3100)
	(can-research ri-heavy-cavalry-archer)
=>
	(chat-local-to-self "Na^ng ca^'p heavy-cavalry-archer")
	(research ri-heavy-cavalry-archer)
	(disable-self)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 35)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(building-type-count-total castle >= 2)
	(can-research ri-thumb-ring)
=>
	(chat-local-to-self "Na^ng ca^'p thumb-ring")
	(research ri-thumb-ring)
)

(defrule
	(gold-amount > 3100)
	(can-research ri-parthian-tactics)
=>
	(chat-local-to-self "Na^ng ca^'p parthian-tactics")
	(research ri-parthian-tactics)
	(disable-self)
)

; stable
(defrule
	(building-type-count-total castle >= 2)	
	(can-research ri-bloodlines)
=> 	
	(chat-local-to-self "Na^ng ca^'p bloodlines")
	(research ri-bloodlines)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-husbandry)
=> 	
	(chat-local-to-self "Na^ng ca^'p husbandry")
	(research ri-husbandry)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(current-age == imperial-age)
	(can-research ri-light-cavalry)
=> 	
	(chat-local-to-self "Na^ng ca^'p light-cavalry")
	(research ri-light-cavalry)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)	
	(can-research ri-cavalier)
=> 	
	(chat-local-to-self "Na^ng ca^'p cavalier")
	(research ri-cavalier)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-hussar)
=> 	
	(chat-local-to-self "Na^ng ca^'p hussar")
	(research ri-hussar)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-paladin)
=> 	
	(chat-local-to-self "Na^ng ca^'p paladin")
	(research ri-paladin)
 	(disable-self)
)

(defrule
	(can-research ri-heavy-camel)
=>
	(chat-local-to-self "Na^ng ca^'p heavy-camel")
	(research ri-heavy-camel)
	(disable-self)
)

; university
(defrule
 	(building-type-count-total castle >= 2)
 	(can-research ri-chemistry)
=> 	
	(research ri-chemistry)
	(chat-local-to-self "Na^ng ca^'p chemistry")
	(disable-self)
)

(defrule
 	(building-type-count-total castle >= 2)
	(can-research ri-ballistics)
=> 		
	(chat-local-to-self "Na^ng ca^'p ballistics")
	(research ri-ballistics)
	(disable-self)
)

(defrule 	
	(building-type-count-total castle >= 2)
	(can-research ri-murder-holes)
=> 		
	(research ri-murder-holes)
 	(chat-local-to-self "Na^ng ca^'p murder-holes")
	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-siege-engineers)
=> 	
	(research ri-siege-engineers)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-stonecutting); treatmill-crane
=> 	
	(research ri-stonecutting)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research ri-masonry)
=> 	
	(research ri-masonry)
 	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)	
	(can-research ri-architecture)
=> 	
	(research ri-architecture)
 	(disable-self)
)

; monastery
(defrule 	
	(building-type-count-total castle >= 2)
	(can-research ri-illumination)
=> 		
	(research ri-illumination)
	(chat-local-to-self "Na^ng ca^'p illumination")
	(disable-self)
)

(defrule	
	(building-type-count-total castle >= 2)
	(unit-type-count monk > 1)
	(can-research ri-sanctity)
=> 	
	(research ri-sanctity)
	(chat-local-to-self "Na^ng ca^'p sanctity")
 	(disable-self)
)

(defrule 	
	(gold-amount > 1200)
	(unit-type-count monk > 1)
	(can-research ri-block-printing)
=>	
	(research ri-block-printing)
	(chat-local-to-self "Na^ng ca^'p block-printing")
 	(disable-self)
)

(defrule 	
	(gold-amount > 2000)
	(unit-type-count monk > 1)
	(can-research ri-fervor)
=>	
	(research ri-fervor)
	(chat-local-to-self "Na^ng ca^'p fervor")
 	(disable-self)
)

(defrule 	
	(gold-amount > 2000)
	(unit-type-count monk > 2)
	(can-research ri-redemption)
=> 	
	(research ri-redemption)
	(chat-local-to-self "Na^ng ca^'p redemption")
	(disable-self)
)

(defrule 	
	(gold-amount > 2000)
	(can-research ri-heresy)
=>	 	
	(research ri-heresy)
	(chat-local-to-self "Na^ng ca^'p heresy")
	(disable-self)
)

(defrule 	
	(gold-amount > 2000)
	(can-research ri-theocracy)
=>		
	(research ri-theocracy)
	(chat-local-to-self "Na^ng ca^'p theocracy")
 	(disable-self)
)

(defrule 	
	(gold-amount > 2000)
	(can-research ri-faith)
=>		
	(research ri-faith)
	(chat-local-to-self "Na^ng ca^'p faith")
	(disable-self)
)

; castle
(defrule
	(can-research ri-conscription)
=>
	(chat-local-to-self "Na^ng ca^'p conscription")
	(research ri-conscription)
)

(defrule
	(building-type-count-total castle >= 2)
	(can-research my-unique-research)
=> 	
	(research my-unique-research)
 	(disable-self)
)

(defrule
	(can-research 408); spies-treason
=>
	(research 408)
	(chat-local-to-self "Na^ng ca^'p spies")
	(chat-to-all "23 Raiding party now")
)

(defrule
	(gold-amount > 3000)
	(can-research my-unique-unit-upgrade)
=>
	(research my-unique-unit-upgrade) 	
	(chat-local-to-self "Na^ng ca^'p my-unique-unit-upgrade")
	(chat-to-all "14 There's no chance for you now")
 	(disable-self)
)

(defrule 
	(food-amount > 2000)
	(gold-amount > 1000)
	(can-research ri-sappers)
=> 
	(research ri-sappers)
)

(defrule 
	(wood-amount > 1000)
	(food-amount > 1000)
	(can-research ri-hoardings)
=> 
	(research ri-hoardings)
)

; siege workshop
(defrule
	(gold-amount > 2700)
	(can-research ri-capped-ram)
=> 	
	(chat-local-to-self "Na^ng ca^'p capped-ram")
	(research ri-capped-ram)
 	(disable-self)
)

(defrule
	(gold-amount > 2800)
	(can-research ri-siege-ram)
=> 	
	(chat-local-to-self "Na^ng ca^'p siege-ram")
	(research ri-siege-ram)
 	(disable-self)
)

(defrule
	(gold-amount > 2700)
	(can-research ri-onager)
=> 	
	(chat-local-to-self "Na^ng ca^'p onager")
	(research ri-onager)
 	(disable-self)
)

(defrule
	(gold-amount > 2800)
	(can-research ri-siege-onager)
=> 	
	(chat-local-to-self "Na^ng ca^'p siege-onager")
	(research ri-siege-onager)
 	(disable-self)
)

(defrule
	(gold-amount > 2800)
	(can-research ri-heavy-scorpion)
=> 	
	(chat-local-to-self "Na^ng ca^'p heavy-scorpion")
	(research ri-heavy-scorpion)
 	(disable-self)
)

; market
(defrule
	(current-age >= castle-age)
	(unit-type-count-total militiaman-line >= 25)
	(players-current-age any-ally >= feudal-age)
	(can-research ri-cartography)
	(unit-type-count-total villager > 35)
=>
	(research ri-cartography)
	(chat-local-to-self "Na^ng ca^'p cartography")
)

(defrule
	(unit-type-count-total trade-cart >= 5)
	(can-research ri-caravan)
=>
	(chat-local-to-self "Na^ng ca^'p caravan")
	(research ri-caravan)
)

(defrule
	(unit-type-count-total trade-cart >= 8)
	(can-research ri-guilds)
=>
	(chat-local-to-self "Na^ng ca^'p guilds")
	(research ri-guilds)
)

;CHAT & TRIBUTE
; introduce
(defrule
	(true)
=>
	(chat-to-all " AI VNS_Chris__ by VNS_Tsubasa ")
	(chat-to-all " Email: quoc383011@mail15.com ")
	(chat-to-all "                    gl hf ")
	(disable-self)
)
; resign
(defrule
	(or (building-type-count town-center < 1)
	(unit-type-count-total villager < 2))
	(unit-type-count-total villager < 3)
	(soldier-count <= 1)
	(players-population any-enemy >= 28)
=>
	(set-goal GOAL-RESIGN 1)
	(enable-timer TIMER-RESIGN-DELAY 20)
	(chat-to-allies "I'm sorry, I'm a little tired today")
	(chat-to-all "gg")
	(chat-to-all "again?")
	(disable-self)
)

(defrule
	(timer-triggered TIMER-RESIGN-DELAY)
	(goal GOAL-RESIGN 1)
=>
	(release-escrow gold)
	(release-escrow stone)
	(release-escrow wood)
	(release-escrow food)
	(tribute-to-player any-ally gold 20000)
	(tribute-to-player any-ally stone 20000)
	(tribute-to-player any-ally wood 20000)
	(tribute-to-player any-ally food 20000)
	(disable-timer TIMER-RESIGN-DELAY)
	(resign)
	(disable-self)
)
; chat
(defrule
	(game-time > 77)
=>
	(chat-to-all " lol ")
	(chat-to-all " don't know my power ?")
	(set-goal GOAL-I-AM-THE-SHOT 1)
	(disable-self)
)

(defrule
	(game-time > 90)     
=>
	(chat-to-all "I'll give u a lesson")
	(chat-to-all "11 Hope u like it")
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(game-time < 640)
	(players-current-age any-enemy >= feudal-age)
=>
	(chat-to-all "Oh, so fast!")
	(chat-to-all "2 TowerRush? NO!!!")
	(disable-self)
)

(defrule
	(goal GOAL-RESEARCHING-CASTLE 1)
=>
	(chat-to-allies "Chua^n bi. le^n  castle age")
	(disable-self)
)

(defrule
    	(players-building-count any-enemy > 0)
=>
    	(chat-to-all "16 You're too slow :)")
	(set-goal GOAL-FIND-ENEMY 1)
    	(disable-self)
)

(defrule
	(goal GOAL-MOBILISE-DEFENCE 1)
	(soldier-count <= 5)
=>
	(chat-to-allies "38 Cu*'u to^i vo*'i!!!")
	(enable-timer TIMER-CALL-HELP 50)
	(disable-self)
)

(defrule
	(goal GOAL-MOBILISE-DEFENCE 1)
	(soldier-count <= 5)
	(timer-triggered TIMER-CALL-HELP)
=>
	(chat-to-allies "38 SOS, cu*'u ma.ng !!!")
	(disable-timer TIMER-CALL-HELP)
	(enable-timer TIMER-CALL-HELP 50)
)

(defrule
	(current-age >= imperial-age)
	(game-time > 3200)
=>
	(chat-to-all " gg?")
	(disable-self)
)

(defrule
	(current-age >= imperial-age)
	(game-time > 3225)
=>
	(chat-to-all "11 You're too rook !")
	(disable-self)
)

(defrule
	(current-age >= imperial-age)
	(game-time > 4200)
=>
	(chat-to-all "You will surely die")
	(chat-to-all "1 I promise that 100%")
	(disable-self)
)

(defrule
	(population > 80)
	(players-population any-enemy < 4)
=>
	(chat-to-all "11 A bad rookie!")
	(chat-to-all "You must practise more to play with me !")
	(disable-self)
)

;tributes to allies
(defrule
    (game-time >= 3600)                                     
    (players-current-age any-ally < imperial-age)           
    (players-tribute any-ally food < 2000)                  
    (food-amount >= 2000)                                   
=>
    (tribute-to-player this-any-ally food 700)
)
(defrule
    (players-tribute any-ally food < 2000)                  
    (food-amount >= 3000)                                   
=>
    (tribute-to-player this-any-ally food 1000)
)
(defrule
    (current-age == imperial-age)                           
    (players-current-age any-ally == feudal-age)            
    (food-amount >= 500)                                    
=>
    (tribute-to-player this-any-ally food 500)
)
(defrule
    (taunt-detected any-ally 3)
    (building-type-count market > 0)                        
    (food-amount >= 1500)                                   
=>
    (tribute-to-player this-any-ally food 600)
    (acknowledge-taunt this-any-ally 3)
)
(defrule
    (taunt-detected any-ally 3)
    (building-type-count market > 0)                        
    (food-amount < 1500)                                    
    (food-amount >= 1000)                                   
=>
    (tribute-to-player this-any-ally food 400)
    (acknowledge-taunt this-any-ally 3)
)
(defrule
    (taunt-detected any-ally 3)
    (building-type-count market > 0)                        
    (food-amount < 1000)                                    
    (food-amount >= 500)                                    
=>
    (tribute-to-player this-any-ally food 200)
    (acknowledge-taunt this-any-ally 3)
)
(defrule
    (players-tribute any-ally gold < 2000)                  
    (gold-amount >= 3000)                                   
=>
    (tribute-to-player this-any-ally gold 1000)
)
(defrule
    (game-time >= 3600)                                     
    (players-current-age any-ally < imperial-age)           
    (players-tribute any-ally gold < 2000)                  
    (gold-amount >= 2000)                                   
=>
    (tribute-to-player this-any-ally gold 700)
)
(defrule
    (taunt-detected any-ally 5)
    (building-type-count market > 0)                        
    (gold-amount >= 1500)                                   
=>
    (tribute-to-player this-any-ally gold 600)
    (acknowledge-taunt this-any-ally 5)
)
(defrule
    (taunt-detected any-ally 5)
    (building-type-count market > 0)                        
    (gold-amount < 1500)                                    
    (gold-amount >= 1000)                                   
=>
    (tribute-to-player this-any-ally gold 400)
    (acknowledge-taunt this-any-ally 5)
)
(defrule
    (taunt-detected any-ally 5)
    (building-type-count market > 0)                        
    (gold-amount < 1000)                                    
    (gold-amount >= 500)                                    
=>
    (tribute-to-player this-any-ally gold 200)
    (acknowledge-taunt this-any-ally 5)
)
(defrule
    (players-tribute any-ally wood < 2000)                  
    (wood-amount >= 3000)                                   
=>
    (tribute-to-player this-any-ally wood 1000)
)
(defrule
    (players-building-type-count any-ally town-center < 2)  
    (players-tribute any-ally wood < 2000)                  
    (wood-amount >= 2000)                                   
=>
    (tribute-to-player this-any-ally wood 700)
)
(defrule
    (taunt-detected any-ally 4)
    (building-type-count market > 0)                        
    (wood-amount >= 1500)                                   
=>
    (tribute-to-player this-any-ally wood 600)
    (acknowledge-taunt this-any-ally 4)
)
(defrule
    (taunt-detected any-ally 4)
    (building-type-count market > 0)                        
    (wood-amount < 1500)                                    
    (wood-amount >= 1000)                                   
=>
    (tribute-to-player this-any-ally wood 400)
    (acknowledge-taunt this-any-ally 4)
)
(defrule
    (taunt-detected any-ally 4)
    (building-type-count market > 0)                        
    (wood-amount < 1000)                                    
    (wood-amount >= 500)                                    
=>
    (tribute-to-player this-any-ally wood 200)
    (acknowledge-taunt this-any-ally 4)
)
(defrule
    (players-tribute-memory any-ally stone < 1000)          
    (players-building-type-count any-ally castle == 0)      
    (stone-amount >= 1500)                                  
=>
    (tribute-to-player this-any-ally stone 500)
)
(defrule
    (current-age == imperial-age)                           
    (taunt-detected any-ally 38)
    (building-type-count market > 0)                        
    (wood-amount >= 1200)                                   
=>
    (tribute-to-player this-any-ally wood 500)
    (acknowledge-taunt this-any-ally 38)
)
(defrule
    (current-age == imperial-age)                           
    (taunt-detected any-ally 38)
    (building-type-count market > 0)                        
    (wood-amount < 1200)                                    
    (food-amount >= 1200)                                   
=>
    (tribute-to-player this-any-ally food 500)
    (acknowledge-taunt this-any-ally 38)
)
(defrule
    (current-age == imperial-age)                           
    (taunt-detected any-ally 38)
    (building-type-count market > 0)                        
    (wood-amount < 1200)                                    
    (food-amount < 1200)                                    
    (gold-amount >= 1200)                                   
=>
    (tribute-to-player this-any-ally gold 500)
    (acknowledge-taunt this-any-ally 38)
)

;ask for tribute
(defrule
    (current-age >= castle-age)                             
    (game-time >= 2400)                                     
    (soldier-count < 10)                                    
    (unit-type-count villager < 30)                         
    (food-amount < 200)                                     
=>
    (chat-to-allies "3 Xin i't food")
    (disable-self)
)
(defrule
    (current-age == feudal-age)                             
    (game-time >= 2400)                                     
    (soldier-count < 10)                                    
    (food-amount < 300)                                     
=>
    (chat-to-allies "3 Xin i't food")
    (disable-self)
)
(defrule
    (current-age >= castle-age)                             
    (soldier-count < 10)                                    
    (players-military-population any-enemy >= 25)           
    (food-amount >= 1000)                                   
    (gold-amount < 200)                                     
=>
    (chat-to-allies "5 Xin i't gold")
    (disable-self)
)
(defrule
    (current-age >= castle-age)                             
    (soldier-count < 10)                                    
    (unit-type-count villager < 20)                         
    (wood-amount < 200)                                     
    (building-type-count-total town-center < 2)             
=>
    (chat-to-allies "4 Xin i't wood")
    (disable-self)
)
(defrule
    (current-age >= castle-age)                             
    (soldier-count < 10)                                    
    (unit-type-count villager < 15)                         
    (wood-amount < 200)                                     
    (building-type-count-total town-center < 2)             
=>
    (chat-to-allies "4 Xin i't wood")
    (disable-self)
)
(defrule
    (current-age == imperial-age)                           
    (soldier-count < 20)                                    
    (unit-type-count villager < 30)                         
    (building-type-count-total town-center < 2)             
=>
    (chat-to-allies "38 Ca^`n ta`i nguye^n ga^'p")
    (disable-self)
)

; thanks
(defrule
    (players-tribute-memory any-ally food > 0)              
=>
    (chat-to-allies "39 thx")
    (clear-tribute-memory this-any-ally food)               
)
(defrule
    (players-tribute-memory any-ally gold > 0)              
=>
    (chat-to-allies "39 thx")
    (clear-tribute-memory this-any-ally gold)               
)
(defrule
    (players-tribute-memory any-ally wood > 0)              
=>
    (chat-to-allies "39 thx")
    (clear-tribute-memory this-any-ally wood)               
)
(defrule
    (players-tribute-memory any-ally stone > 0)             
=>
    (chat-to-allies "39 thx")
    (clear-tribute-memory this-any-ally stone)              
)

;TRAIN
; Villager
(defrule
	(current-age == dark-age)
	(goal GOAL-CHEATS-NOW 0)
	(unit-type-count-total villager <= 25)
	(or
		(food-amount < 500)
		(unit-type-count-total villager < 20)
	)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(current-age == dark-age)
	(or (goal GOAL-CHEATS-NOW 1)
		(difficulty == hardest))
	(unit-type-count-total villager <= 25)
	(or (food-amount < 500)
		(unit-type-count-total villager < 15))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(current-age == feudal-age)
	(or (goal GOAL-MOBILISE-DEFENCE 0)
		(unit-type-count-total villager < 25))
	(not (can-research castle-age))
	(unit-type-count-total villager < 50)
	(or (goal GOAL-FIRST-RUCH 0)
		(unit-type-count-total villager < 31))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(current-age == castle-age)
	(or (goal GOAL-MOBILISE-DEFENCE 0)
		(soldier-count > 5))
	(unit-type-count-total villager < 70)
	(can-train villager)
	(not (can-research imperial-age))
=>
	(train villager)
)

(defrule
	(current-age == imperial-age)
	(or (goal GOAL-MOBILISE-DEFENCE 0)
		(unit-type-count-total villager < 90))
	(unit-type-count-total villager < 100)
	(gold-amount < 3100)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(current-age == imperial-age)
	(unit-type-count-total villager > 80)
	(gold-amount > 3100)
=>
	(delete-unit villager)
	(chat-local-to-self "gie^'t villager")
)
; trade-cart
 (defrule
	(current-age == imperial-age)
	(commodity-selling-price food < 60)
	(commodity-selling-price wood < 60)
	(wood-amount > 300)
	(players-building-type-count any-ally market >= 1)
	(can-train trade-cart)
	(unit-type-count-total trade-cart < 8)
=>
	(train trade-cart)
)

(defrule
	(current-age == imperial-age)
	(commodity-selling-price food < 60)
	(commodity-selling-price wood < 60)
	(wood-amount > 300)
	(players-building-type-count any-ally market >= 1)
	(research-completed ri-caravan)
	(can-train trade-cart)
	(unit-type-count-total trade-cart < 18)
=>
	(train trade-cart)
)
; skirmisher-line
(defrule
	(current-age >= feudal-age)
	(food-amount > 50)
	(goal GOAL-PROTEST-KNIGHT 0)
	(can-train skirmisher)
	(building-type-count-total archery-range >= 2)
	(unit-type-count-total skirmisher-line < 10)
=>
	(train skirmisher-line)
)

(defrule
	(current-age <= feudal-age)
	(goal GOAL-MOBILISE-DEFENCE 1)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(unit-type-count-total spearman-line > 11))
	(can-train skirmisher)
	(unit-type-count-total skirmisher-line < 15)
=>
	(train skirmisher-line)
)

(defrule
	(current-age == feudal-age)
	(food-amount > 50)
	(goal GOAL-PROTEST-FRUSH 1)
	(can-train skirmisher)
	(building-type-count-total archery-range >= 2)
	(unit-type-count-total skirmisher-line < 20)
=>
	(train skirmisher-line)
)

(defrule
	(current-age >= feudal-age)
	(or (goal GOAL-FAST-ATTACK 1)
		(goal GOAL-START-THE-IMPERIAL-ARMY 1))
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(unit-type-count-total spearman-line > 11))
	(can-train skirmisher)
	(building-type-count-total archery-range >= 2)
	(unit-type-count-total skirmisher-line < 20)
=>
	(train skirmisher-line)
)

(defrule
	(goal GOAL-PROTEST-ARCHER 1)
	(can-train skirmisher)
	(unit-type-count-total skirmisher-line < 30)
=>
	(train skirmisher-line)
)
; archer-line
(defrule
	(current-age == feudal-age)
	(goal GOAL-FAST-ATTACK 1)
	(building-type-count-total archery-range >= 2)
	(can-train archer)
	(unit-type-count-total archer-line < 6)
=>
	(train archer-line)
)
; spearman-line
(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy >= castle-age)
	(not (players-civ any-enemy aztec))
	(not (players-civ any-enemy mayan))
	(can-train spearman)
	(unit-type-count-total spearman-line < 12)
=>
	(train spearman-line)
)

(defrule
	(can-train spearman)
	(or (current-age >= castle-age)
		(building-type-count-total archery-range >= 2))
	(food-amount > 50)
	(unit-type-count-total spearman-line < 10)
=>
	(train spearman-line)
)

(defrule
	(goal GOAL-PROTEST-KNIGHT 1)
	(can-train spearman)
	(unit-type-count-total spearman-line < 20)
=>
	(train spearman-line)
)

(defrule
	(players-unit-type-count any-enemy knight-line > 3)
	(can-train spearman)
	(unit-type-count-total spearman-line < 25)
=>
	(train spearman-line)
)

(defrule
	(goal GOAL-PROTEST-KNIGHT 1)
	(research-completed ri-pikeman)
	(can-train spearman)
	(unit-type-count-total spearman-line < 30)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(food-amount > 100)
	(gold-amount < 20)
	(can-train skirmisher)
	(unit-type-count-total skirmisher-line < 40)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-PROTEST-KNIGHT 1)
	(food-amount > 200)
	(wood-amount > 200)
	(research-completed ri-pikeman)
	(can-train spearman)
	(unit-type-count-total spearman-line < 48)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(food-amount > 100)
	(gold-amount < 20)
	(research-completed ri-pikeman)
	(can-train spearman)
	(unit-type-count-total spearman-line < 50)
=>
	(train spearman-line)
)
; militiaman-line
(defrule
	(current-age >= feudal-age)
	(can-train militiaman-line)
	(unit-type-count-total militiaman-line < 6)
=>
	(train militiaman-line)
)

(defrule
	(current-age == feudal-age)
	(goal GOAL-RESEARCHING-CASTLE 1)
	(unit-type-count-total militiaman-line < 20)
	(food-amount > 400)
	(gold-amount > 300)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(can-train militiaman-line)
	(unit-type-count-total militiaman-line < 5)
	(research-completed ri-man-at-arms)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(goal GOAL-PROTECT-EAGLE 1)
	(can-train militiaman-line)
	(unit-type-count-total militiaman-line < 12)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line < 18)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(or (goal GOAL-FAST-ATTACK 1)
		(goal GOAL-MOBILISE-DEFENCE 1))
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 20)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line < 20)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(goal GOAL-FAST-ATTACK 1)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line < 30)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal GOAL-RESEARCHING-IMPERIAL 1)
	(goal GOAL-PROTEST-KNIGHT 0)
	(food-amount > 900)
	(gold-amount > 700)
	(unit-type-count-total militiaman-line < 60)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-pikeman))
	(unit-type-count-total militiaman-line < 85)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
; more
(defrule
	(can-train monk)
	(unit-type-count-total monk < 4)
=>
	(train monk)
)

(defrule
	(research-completed my-unique-unit-upgrade)
	(can-train my-unique-unit)
=>
	(train my-unique-unit)
)

(defrule
	(gold-amount > 2000)
	(can-train knight-line)
=>
	(train knight-line)
	(train elite-eagle-warrior)
)

(defrule
	(food-amount > 3600)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(unit-type-count-total trebuchet < 3);packed trebuchet
	(unit-type-count-total 42 < 2);unpacked trebuchet
	(wood-amount > 400)
	(gold-amount > 400)
	(unit-type-count-total spearman-line >= 30)
	(can-train trebuchet)
=>
	(train trebuchet)
)

(defrule
	(unit-type-count-total trebuchet < 3);packed trebuchet
	(unit-type-count-total 42 < 2);unpacked trebuchet
	(wood-amount > 400)
	(gold-amount > 400)
	(unit-type-count-total militiaman-line >= 36)
	(can-train trebuchet)
=>
	(train trebuchet)
)

(defrule
	(unit-type-count-total  battering-ram-line < 2)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(soldier-count >= 50)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
	(or (goal GOAL-START-THE-IMPERIAL-ARMY 1)
		(goal GOAL-MOBILISE-DEFENCE 1))
	(unit-type-count-total mangonel < 1)
	(wood-amount > 300)
	(gold-amount > 300)
	(can-train mangonel)
=>
	(train mangonel)
	(chat-local-to-self "Ta.o mangonel")
)

;BUILD
; town-center
(defrule
	(game-time > 45)
	(building-type-count town-center less-than 1)
	(can-build town-center)
=>
	(build town-center)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total barracks >= 2)
	(can-build town-center)
	(wood-amount >= 300)
	(building-type-count-total town-center < 3)
=>
	(build town-center)
	(chat-local-to-self "Xa^y town center")
)

(defrule
	(current-age >= castle-age)
	(can-build town-center)
	(building-type-count-total university > 0)
	(building-type-count-total town-center < 4)
=>
	(build town-center)
	(chat-local-to-self "Xa^y town center")
)

; house
(defrule
	(current-age == dark-age)
	(housing-headroom < 3)
	(building-type-count-total house < 50)
	(can-build house)
=>
	(build house)
)

(defrule
	(current-age == feudal-age)
	(housing-headroom < 8)
	(can-build house)
=>
	(build house)
)

(defrule
	(current-age == castle-age)
	(housing-headroom < 10)
	(goal GOAL-FAST-ATTACK 1)
	(building-type-count-total house < 50)
	(can-build house)
=>
	(build house)
)

(defrule
	(current-age == castle-age)
	(housing-headroom < 20)
	(can-build house)
=>
	(build house)
)

(defrule
	(current-age == imperial-age)
	(housing-headroom < 15)
	(building-type-count-total house < 42)
	(can-build house)
=>
	(build house)
)

; camps & mills

(defrule
	(current-age == dark-age)
	(building-type-count-total mill == 0)
	(or
		(resource-found food)
		(unit-type-count-total villager > 9)
	)
	(can-build mill)
=>
	(chat-local-to-self "Xa^y Mill 1")
	(build mill)
)

(defrule
	(current-age == dark-age)
	(unit-type-count-total villager > 10)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp == 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(chat-local-to-self "Xa^y Lumber-camp 1")
	(build lumber-camp)
)

(defrule
	(current-age > feudal-age)
	(building-type-count-total lumber-camp > 0)
	(unit-type-count-total villager >= 15)
	(building-type-count-total mill > 0)
	(building-type-count-total mill < 2)
	(wood-amount >= 300)
	(can-build mill)
=>
	(chat-local-to-self "Xa^y Mill 2")
	(build mill)
)

(defrule
	(building-type-count-total lumber-camp < 2)
	(building-type-count-total farm > 2)
	(can-build lumber-camp)
=>
	(chat-local-to-self "Xa^y Lumber-camp 2")
	(build lumber-camp)
)

(defrule
	(current-age == feudal-age)
	(or
		(dropsite-min-distance wood > 4)
		(and (wood-amount > 300) (building-type-count-total lumber-camp < 2))
	)
	(building-type-count-total archery-range > 0)
	(can-build lumber-camp)
=>
	(chat-local-to-self "Xa^y Lumber-camp 2")
	(build lumber-camp)
)

(defrule
	(resource-found gold)
	(can-build mining-camp)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total barracks > 0)
	(building-type-count-total mining-camp == 0)
	(goal GOAL-RESEARCHING-FEUDAL 1)
=>
	(chat-local-to-self "Xa^y Mining camp 1 la^'y gold")
	(build mining-camp)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 10)
)

(defrule
	(current-age >= castle-age)
	(or
		(dropsite-min-distance wood > 4)
		(and (wood-amount > 300) (building-type-count-total lumber-camp < 5))
	)
	(building-type-count-total lumber-camp < 20)
	(can-build lumber-camp)
=>
	(chat-local-to-self "Xa^y Lumber-camp")
	(build lumber-camp)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total lumber-camp == 0)
	(can-build lumber-camp)
=>
	(chat-local-to-self "Xa^y la.i Lumber camp")
	(build lumber-camp)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total mining-camp > 0)
	(or
		(dropsite-min-distance gold > 5)
		(and (wood-amount > 300) (building-type-count-total mining-camp < 4))
	)
	(building-type-count-total mining-camp < 20)
	(resource-found gold)
	(can-build mining-camp)
=>
	(chat-local-to-self "Xa^y Mining-camp")
	(build mining-camp)
)

; farm
(defrule
	(not (goal GOAL-RESEARCHING-FEUDAL 1))
	(current-age == dark-age)
	(unit-type-count-total villager >= 15)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total mill > 0)
	(building-type-count-total farm <= 4 )
	(can-build farm)
=>
	(build farm)
)

(defrule
	(not (goal GOAL-RESEARCHING-FEUDAL 1))
	(current-age == dark-age)
	(unit-type-count-total villager >= 15)
	(building-type-count-total lumber-camp > 1)
	(building-type-count-total mill > 0)
	(idle-farm-count < 3)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal GOAL-RESEARCHING-FEUDAL 1)
	(current-age == dark-age)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total mill > 0)
	(building-type-count-total mining-camp > 0)
	(idle-farm-count < 1)
	;(or
	;	(sheep-and-forage-too-far)
	;	(game-time > 500)
	;)
	(wood-amount >= 120)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(current-age == feudal-age)
;	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 1)
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(current-age == castle-age)
	(or
		(building-type-count-total barracks >= 3)
		(wood-amount >= 200)
	)
	(idle-farm-count < 2)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(current-age == imperial-age)
	(or
		(building-type-count-total barracks > 3)
		(wood-amount >= 280)
	)
	(idle-farm-count < 3)
	(can-build farm)
=>
	(build farm)
)

; blacksmith & market & monastery & university
(defrule
	(current-age != dark-age)
	(or 	(goal GOAL-CHEATS-NOW 1)
		(building-type-count-total archery-range >= 2))
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
	(chat-local-to-self "Xa^y blacksmith")
	(disable-self)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total market > 0)
	(building-type-count-total barracks > 1)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
	(chat-local-to-self "Xa^y lai blacksmith")
)

(defrule
	(current-age >= feudal-age) 
	(building-type-count-total market == 0)
	(building-type-count-total archery-range >= 2)
	(can-build market)
	(wood-amount >= 220)
=>
	(chat-local-to-self "Xa^y market")
	(build market)
)

(defrule
	(current-age != dark-age)
	(or (goal GOAL-CHEATS-NOW 1)
	(wood-amount >= 220))
	(building-type-count-total blacksmith > 0)
	(building-type-count-total market == 0)
	(can-build market)
=>
	(chat-local-to-self "Xa^y lai market")
	(build market)
)

(defrule
	(current-age >= castle-age) 
	(building-type-count-total monastery == 0)
	(can-build monastery)
	(building-type-count-total barracks >= 1)
	(wood-amount >= 220)
=>
	(chat-local-to-self "Xa^y monastery")
	(build monastery)
)

(defrule
	(current-age >= castle-age) 
	(building-type-count-total monastery > 0)
	(building-type-count-total university == 0)
	(can-build university)
	(wood-amount > 300)
=>
	(chat-local-to-self "Xa^y university")
	(build university)
)

(defrule
	(can-build university)
	(building-type-count-total university == 0)
	(building-type-count-total monastery > 0)
	(building-type-count-total siege-workshop > 0)
=>
	(chat-local-to-self "Xa^y lai university")
	(build university)
)

; barracks & archery range & siege-workshop & stable & castle
(defrule
	(goal GOAL-RESEARCHING-FEUDAL 1)
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(chat-local-to-self "Xa^y barracks")
	(build barracks)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total barracks <= 1)
	(building-type-count-total archery-range >= 2)
	(wood-amount >= 250)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total barracks <= 6)
	(building-type-count-total archery-range >= 2)
	(wood-amount >= 290)
	(can-build barracks)
=>
	(cc-add-resource food 100)
	(cc-add-resource wood 100)
	(build barracks)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total barracks <= 8)
	(wood-amount >= 620)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total archery-range < 2)
	(can-build archery-range)
=>
	(chat-local-to-self "Xa^y archery range")
	(cc-add-resource 100 food)
	(cc-add-resource 150 wood)
	(build archery-range)
)

(defrule
	(current-age != dark-age)
	(building-type-count-total archery-range < 4)
	(wood-amount >= 620)
	(can-build archery-range)
=>
	(chat-local-to-self "Xa^y archery range")
	(build archery-range)
)

(defrule
	(can-build castle)
=>
	(build castle)
	(chat-local-to-self "Xa^y castle")
)

(defrule
	(current-age >= imperial-age)
	(building-type-count-total barracks > 5)
	(building-type-count-total siege-workshop == 0)
	(wood-amount >= 400)
	(can-build siege-workshop)
=>
	(chat-local-to-self "Xa^y siege workshop")
	(build siege-workshop)
)

(defrule
	(current-age >= imperial-age)
	(building-type-count-total barracks >= 8)
	(building-type-count-total stable < 4)
	(wood-amount >= 800)
	(can-build stable)
=>
	(chat-local-to-self "Xa^y stable")
	(build stable)
)

; forward
(defrule
	(current-age >= imperial-age)
	(wood-amount >= 1900)
	(building-type-count-total siege-workshop < 3)
=>
	(build-forward siege-workshop)
)

(defrule
	(building-type-count-total castle >= 2)
	(current-age >= imperial-age)
	(wood-amount >= 2000)
	(building-type-count-total barracks <= 13)
=>
	(build-forward barracks)
)

(defrule
	(building-type-count-total castle >= 5)
	(can-build castle)
=>
	(build-forward castle)
	(chat-to-all "11 Game over right now")
)

(defrule
	(building-type-count-total castle >= 2)
	(current-age >= imperial-age)
	(wood-amount >= 2100)
	(building-type-count-total stable < 8)
=>
	(build-forward stable)
)

(defrule
	(building-type-count-total castle >= 2)
	(current-age >= imperial-age)
	(wood-amount >= 2100)
	(building-type-count-total archery-range < 8)
=>
	(build-forward archery-range)
)

; ECONOMY
; strategic-numbers

(defrule
	(true)
=>
	(set-strategic-number sn-percent-civilian-gatherers 90)
	(set-strategic-number sn-percent-civilian-builders 10)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-number-build-attempts-before-skip 3)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

; set town size 
(defrule
	(current-age == dark-age)
=>
	(set-strategic-number sn-maximum-town-size 12)
	(set-strategic-number sn-minimum-town-size 11)
	(set-strategic-number sn-camp-max-distance 20)
	(set-strategic-number sn-mill-max-distance 20)
	(set-strategic-number sn-required-forest-tiles 50)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
=>
	(set-strategic-number sn-special-attack-type1 lumber-camp)
	(set-strategic-number sn-special-attack-type2 mining-camp)
	(set-strategic-number sn-maximum-town-size 14)
	(set-strategic-number sn-minimum-town-size 11)
	(set-strategic-number sn-camp-max-distance 22)
	(disable-self)
)

(defrule
	(current-age <= feudal-age)
	(building-type-count-total lumber-camp > 2)
=>
	(set-strategic-number sn-camp-max-distance 30)
	(disable-self)
)

(defrule
	(current-age == castle-age)
=>
	(set-strategic-number sn-special-attack-type1 villager)
	(set-strategic-number sn-maximum-town-size 23)
	(set-strategic-number sn-camp-max-distance 30)
	(set-strategic-number sn-mill-max-distance 18)
	(disable-self)
)

(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-maximum-town-size 23)
	(set-strategic-number sn-camp-max-distance 45)
	(set-strategic-number sn-mill-max-distance 40)
	(disable-self)
)

(defrule
	(game-time > 3000)
=>
	(set-strategic-number sn-maximum-town-size 26)
	(set-strategic-number sn-camp-max-distance 70)
	(set-strategic-number sn-mill-max-distance 50)
	(disable-self)
)

(defrule
	(game-time > 4000)
=>
	(set-strategic-number sn-maximum-town-size 30)
	(set-strategic-number sn-camp-max-distance 150)
	(set-strategic-number sn-mill-max-distance 60)
	(disable-self)
)

(defrule
	(building-type-count castle >= 8)
=>
	(set-strategic-number sn-maximum-town-size 999)
)

; relic
(defrule
	(true)
=>
	(set-strategic-number sn-relic-return-distance 500)
	(disable-self)
)

; escrow amounts
(defrule
	(true)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(disable-self)
)

(defrule 
   	(true) 
=>
 	(set-strategic-number sn-initial-exploration-required 0)
    	(set-strategic-number sn-percent-exploration-required 100)
   	(set-strategic-number sn-cap-civilian-explorers 2) 
   	(set-strategic-number sn-number-explore-groups 1) 
   	(set-strategic-number sn-minimum-explore-group-size 1) 
   	(set-strategic-number sn-maximum-explore-group-size 1) 
   	(set-strategic-number sn-percent-half-exploration 70)
   	(set-strategic-number sn-percentage-explore-exterminators 60)
   	(disable-self)
)

(defrule 
   	(true) 
=>
   	(set-strategic-number sn-cap-civilian-builders 20)
   	(set-strategic-number sn-cap-civilian-gatherers 80)
   	(disable-self)
)

(defrule 
   	(true) 
=>
   	(set-strategic-number sn-maximum-wood-drop-distance 7)
   	(set-strategic-number sn-maximum-food-drop-distance 24)
   	(set-strategic-number sn-maximum-hunt-drop-distance 25)
   	(set-strategic-number sn-maximum-gold-drop-distance 15)
   	(set-strategic-number sn-maximum-stone-drop-distance 15)
   	(disable-self)
)

(defrule 
   	(true) 
=>
   	(set-strategic-number sn-food-dropsite-distance 12)
   	(set-strategic-number sn-wood-dropsite-distance 3)
   	(set-strategic-number sn-stone-dropsite-distance 3)
   	(set-strategic-number sn-gold-dropsite-distance 3)
   	(disable-self)
)

(defrule 
   	(true)
=>
   	(set-strategic-number sn-intelligent-gathering 1)
   	(set-strategic-number sn-minimum-dropsite-buffer 1)
   	(set-strategic-number sn-retask-gather-amount 0)
   	(set-strategic-number sn-max-retask-gather-amount 0)
   	(disable-self)
)

;search food
(defrule
	(current-age == dark-age)
	(not (resource-found food))
	(unit-type-count-total villager < 10)
=>
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-percent-civilian-builders 10)
	(set-strategic-number sn-percent-civilian-explorers 90)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(or
		(resource-found food)
		(not (sheep-and-forage-too-far))
	)
=>
	(set-strategic-number sn-percent-civilian-gatherers 90)
	(set-strategic-number sn-percent-civilian-builders 10)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(chat-to-all "Oh, food nearby ! :) ")
	(disable-self)
)

; woodies 
(defrule
	(current-age == dark-age)
	(unit-type-count-total villager == 10)
=>
	(chat-local-to-self "Ba't da^`u la^'y wood")
	(set-strategic-number sn-wood-gatherer-percentage 10)
	(set-strategic-number sn-food-gatherer-percentage 90)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(unit-type-count-total villager == 15)
=>
	(chat-local-to-self "La^y' the^m wood")
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 65)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
	(building-type-count-total market > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(disable-self)
)

; sell
(defrule
	(current-age >= castle-age)
	(building-type-count-total market > 0)
	(can-sell-commodity wood)
	(wood-amount > 700)
	(gold-amount < 800)
=>
	(sell-commodity wood)
	(chat-local-to-self "Ba'n wood")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(wood-amount > 3000)
	(can-sell-commodity food)
	(commodity-selling-price wood > 50)
=>
	(sell-commodity wood)
	(chat-local-to-self "Ba'n wood")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(wood-amount > 5000)
	(can-sell-commodity wood)
	(commodity-selling-price wood > 30)
=>
	(sell-commodity wood)
	(chat-local-to-self "Ba'n wood")
)

(defrule
	(current-age == feudal-age)
	(building-type-count-total market > 0)
	(food-amount > 900)
	(gold-amount < 200)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(current-age == castle-age)
	(building-type-count-total market > 0)
	(food-amount > 900)
	(gold-amount < 120)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total market > 0)
	(can-sell-commodity food)
	(food-amount > 1400)
	(gold-amount < 800)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(building-type-count-total market > 0)
	(goal GOAL-PROTEST-MONK 1)
	(can-sell-commodity food)
	(food-amount > 500)
	(gold-amount < 1000)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(current-age == imperial-age)
	(can-sell-commodity food)
	(research-completed ri-champion)
	(food-amount > 750)
	(gold-amount < 200)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(food-amount > 2000)
	(can-sell-commodity food)
	(commodity-selling-price food > 60)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(food-amount > 3000)
	(can-sell-commodity food)
	(commodity-selling-price food > 30)
=>
	(sell-commodity food)
	(chat-local-to-self "Ba'n food")
)

(defrule
	(building-type-count-total market > 0)
	(stone-amount > 800)
	(gold-amount < 800)
	(commodity-selling-price stone >= 90)
=>
	(sell-commodity stone)
	(chat-local-to-self "Ba'n stone")
)

; buy 
(defrule
	(can-buy-commodity food)
	(or
		(food-amount < 200)
		(and (food-amount < 800) (commodity-buying-price food < 121))
	)
	(goal GOAL-PROTEST-MONK 0)
	(gold-amount > 500)
=>
	(buy-commodity food)
	(chat-local-to-self "Mua food")
)
(defrule
	(can-buy-commodity food)
	(goal GOAL-MOBILISE-DEFENCE 1)
	(food-amount < 50)
	(gold-amount > 300)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-local-to-self "Mua food")
)

(defrule
	(can-buy-commodity wood)
	(wood-amount < 300)
	(gold-amount > 990)
=>
	(buy-commodity wood)
	(chat-local-to-self "Mua wood")
)
(defrule
	(current-age == feudal-age)
	(goal GOAL-RESEARCHING-CASTLE 0)
	(building-type-count-total market > 0)
	(or
		(food-amount < 200)
		(and (food-amount < 800) (commodity-buying-price food < 171))
	)
	(gold-amount > 400)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-local-to-self "Mua wood")
)

;MILITARY
;strategic-numbers
(defrule
	(true)
=>
	(set-strategic-number sn-attack-winning-player 1)
	(set-strategic-number sn-attack-winning-player-factor -100)
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-group-form-distance 60)
	(set-strategic-number sn-attack-group-gather-spacing 2)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-minimum-attack-group-size 8)
	(set-strategic-number sn-maximum-attack-group-size 30)
	(set-strategic-number sn-minimum-defend-group-size 6)
	(set-strategic-number sn-maximum-defend-group-size 18)
	(set-strategic-number sn-percent-enemy-sighted-response 90)
	(set-strategic-number sn-enemy-sighted-response-distance 10)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-coop-share-attacking 300)
	(set-strategic-number sn-gather-defense-units 2)
	(set-strategic-number sn-group-form-distance 40)
	(set-strategic-number sn-maximum-gaia-attack-response 0)
	(disable-self)
)

 (defrule
	(true)
=>
	(set-strategic-number sn-special-attack-type1 onager)
	(set-strategic-number sn-special-attack-type2 battering-ram)
	(set-strategic-number sn-special-attack-type3 trebuchet)
	(set-strategic-number sn-special-attack-influence1 100)
	(disable-self)
)

(defrule
	(true)
=>	
	(set-strategic-number sn-allow-civilian-defense 1)
)

(defrule
	(true)
=>
	(set-strategic-number sn-random-placement-factor 0)
	(disable-self)
)

(defrule
   	(true)
=>
   	(set-strategic-number sn-scale-minimum-attack-group-size 1)
   	(set-strategic-number sn-scale-maximum-attack-group-size 10)
   	(set-strategic-number sn-percent-attack-soldiers 100)
   	(set-strategic-number sn-target-evaluation-distance 80)
   	(set-strategic-number sn-target-evaluation-siege-weapon 200)
   	(set-strategic-number sn-target-evaluation-hitpoints 90)
	(set-strategic-number sn-target-evaluation-attack-attempts 40)
	(set-strategic-number sn-target-evaluation-range 10)
	(set-strategic-number sn-target-evaluation-damage-capability 80)
	(set-strategic-number sn-target-evaluation-rof 30)
	(set-strategic-number sn-target-evaluation-time-kill-ratio 70)
   	(set-strategic-number sn-target-evaluation-in-progress 50)
   	(set-strategic-number sn-target-evaluation-kills 0)
   	(disable-self)
)

(defrule
   	(true)
=>
   	(set-strategic-number sn-group-commander-selection-method 2)
   	(set-strategic-number sn-group-form-distance 20)
   	(set-strategic-number sn-attack-group-gather-spacing 4)
   	(set-strategic-number sn-attack-separation-time-randomness 0)
   	(set-strategic-number sn-attack-intelligence 1)
   	(set-strategic-number sn-ignore-attack-group-under-attack 1)
   	(disable-self)
)

(defrule
   	(true)
=>
   	(set-strategic-number sn-number-defend-groups 1)
   	(set-strategic-number sn-maximum-defend-group-size 1)
   	(set-strategic-number sn-gold-defend-priority 7)
   	(set-strategic-number sn-stone-defend-priority 4)
   	(set-strategic-number sn-forage-defend-priority 4)
   	(set-strategic-number sn-relic-defend-priority 4)
   	(set-strategic-number sn-town-defend-priority 8)
   	(set-strategic-number sn-defense-distance 3)
   	(set-strategic-number sn-defend-overlap-distance 3)
   	(set-strategic-number sn-gather-idle-soldiers-at-center 0)
   	(set-strategic-number sn-task-ungrouped-soldiers 0)
   	(disable-self)
)

(defrule
   	(true)
=>
   	(set-strategic-number sn-group-leader-defense-distance 1)
   	(set-strategic-number sn-allow-civilian-defense 1)
   	(set-difficulty-parameter ability-to-maintain-distance 100)
   	(set-difficulty-parameter ability-to-dodge-missiles 100)
   	(set-strategic-number sn-consecutive-idle-unit-limit 60)
   	(set-strategic-number sn-sentry-distance 0)
   	(set-strategic-number sn-sentry-distance-variation 0)
   	(set-strategic-number sn-zero-priority-distance 0)
   	(set-strategic-number sn-attack-separation-time-randomness 0)
   	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-number-enemy-objects-required 0)
	(set-strategic-number sn-percentage-explore-exterminators 70)
	(set-strategic-number sn-blot-exploration-map 1)
	(set-strategic-number sn-blot-size 1)
	(set-strategic-number sn-initial-exploration-required 1)
	(disable-self)
)

; detect attack 
(defrule
	(timer-triggered TIMER-UNDER-ATTACK)
=>
	(set-goal GOAL-MOBILISE-DEFENCE 0)
)

(defrule
	(town-under-attack)
	(or
	(or
		(players-unit-type-count any-enemy militiaman-line > 2)
		(players-unit-type-count any-enemy skirmisher-line > 2)
	)
	(or
		(players-unit-type-count any-enemy battering-ram-line > 0)
		(players-unit-type-count any-enemy knight-line > 1)
	)
	)
=>
	(set-goal GOAL-MOBILISE-DEFENCE 1)
	(disable-timer TIMER-UNDER-ATTACK)
	(enable-timer TIMER-UNDER-ATTACK 6)
)

(defrule
	(town-under-attack)
	(players-military-population any-enemy > 2)
=>
	(set-goal GOAL-MOBILISE-DEFENCE 1)
	(disable-timer TIMER-UNDER-ATTACK)
	(enable-timer TIMER-UNDER-ATTACK 6)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered TIMER-CASTLE-ATTACK)
=>
	(chat-local-to-self "Pho`ng thu Lumber Camp")
	(chat-to-all "pop?")
	(disable-timer TIMER-CASTLE-ATTACK)
	(set-goal GOAL-FAST-ATTACK 0)
	(disable-timer TIMER-ATTACK)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(timer-triggered TIMER-CASTLE-ATTACK)
=>
	(chat-local-to-self "Nhanh cho'ng Mass Swordman")
	(disable-timer TIMER-CASTLE-ATTACK)
	(set-goal GOAL-FAST-ATTACK 0)
	(disable-timer TIMER-ATTACK)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(or (players-building-type-count every-enemy castle >= 1)
	(and (timer-triggered TIMER-RUSH-TIMEOUT)
		(unit-type-count-total militiaman-line <= 20)))
=>
	(chat-local-to-self "Khoan ta^'n co^ng")
	(disable-timer TIMER-RUSH-TIMEOUT)
	(set-goal GOAL-FAST-ATTACK 0)
	(disable-timer TIMER-ATTACK)
	(disable-self)
)
; protest
(defrule
	(or(players-unit-type-count any-enemy knight-line > 3)
	(players-unit-type-count any-enemy cavalry-archer > 5))
=>
	(chat-local-to-self "Ti`m tha^'y knights do^'i phu*o*ng")
	(chat-to-allies "Ti`m tha^'y knights do^'i phu*o*ng")
	(set-goal GOAL-PROTEST-KNIGHT 1)
	(disable-self)
)
(defrule
	(or (players-unit-type-count any-enemy archer-line > 15)
		(or (players-unit-type-count any-enemy hand-cannoneer > 8)
		(players-unit-type-count any-enemy cavalry-archer > 15)))
=>
	(chat-local-to-self "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(chat-to-allies "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(set-goal GOAL-PROTEST-ARCHER 1)
	(disable-self)
)
(defrule
	(goal GOAL-PROTEST-ARCHER 0)
	(or (players-unit-type-count any-enemy longbowman-line > 10)
		(or (players-unit-type-count any-enemy chu-ko-nu-line > 10)
		(players-unit-type-count any-enemy  plumed-archer-line > 11)))
=>
		(chat-local-to-self "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(chat-to-allies "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(set-goal GOAL-PROTEST-ARCHER 1)
	(disable-self)
)
(defrule
	(goal GOAL-PROTEST-ARCHER 0)
	(or (players-unit-type-count any-enemy janissary-line > 10)
		(or (players-unit-type-count any-enemy throwing-axeman-line > 18)
		(players-unit-type-count any-enemy conquistador-line > 10)))
=>
		(chat-local-to-self "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(chat-to-allies "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(set-goal GOAL-PROTEST-ARCHER 1)
	(disable-self)
)
(defrule
	(goal GOAL-PROTEST-ARCHER 0)
	(or (players-unit-type-count any-enemy mangudai-line > 12)
		(or (players-unit-type-count any-enemy mameluke-line > 12)
		(players-unit-type-count any-enemy skirmisher-line > 30)))
=>
	(chat-local-to-self "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(chat-to-allies "Ti`m tha^'y Range Units do^'i phu*o*ng")
	(set-goal GOAL-PROTEST-ARCHER 1)
	(disable-self)
)
(defrule
	(players-unit-type-count any-enemy eagle-warrior-line > 5)
=>
	(chat-local-to-self "Ti`m tha^'y eagle-warriors do^'i phu*o*ng!")
	(chat-to-allies "Ti`m tha^'y eagle-warriors do^'i phu*o*ng!")
	(set-goal GOAL-PROTECT-EAGLE 1)
	(disable-self)
)
(defrule
	(current-age == feudal-age)
	(players-current-age every-enemy <= feudal-age)
	(players-military-population any-enemy > 7)
=>
	(chat-local-to-self "cho^'ng flush")
	(set-goal GOAL-PROTEST-FRUSH 1)
	(disable-self)
)

; rush
(defrule
	(current-age <= feudal-age)
	(unit-type-count-total militiaman-line > 0)
	(goal GOAL-FIND-ENEMY 0)
=>
	(set-strategic-number sn-number-explore-groups 2) 
	(disable-self)
)

(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy <= feudal-age)
=>
	(set-goal GOAL-FAST-ATTACK 1)
	(set-goal GOAL-FIRST-RUCH 1)
	(chat-local-to-self "flush do'i phu*o*ng")
	(disable-self)
)

(defrule
	(current-age >= castle-age)
=>
	(set-goal GOAL-FAST-ATTACK 1)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(players-current-age any-enemy <= feudal-age)
=>
	(set-goal GOAL-FAST-ATTACK 1)
	(set-goal GOAL-FIRST-RUCH 1)
	(enable-timer TIMER-RUSH-TIMEOUT 600)
	(disable-self)
)

; attack
(defrule
	(current-age == feudal-age)
	(goal GOAL-FAST-ATTACK 1)
	(timer-triggered TIMER-ATTACK)
	(or (unit-type-count-total militiaman-line >= 3)
		(military-population >= 10))
=>
	(set-strategic-number sn-percent-attack-soldiers 90)
	(attack-now)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 100)
	(set-strategic-number sn-number-defend-groups 0)
)

(defrule
	(current-age == feudal-age)
	(or (unit-type-count-total skirmisher-line > 6)
		(military-population >= 12))
	(goal GOAL-FAST-ATTACK 1)
=>
	(set-strategic-number sn-number-explore-groups 1) 
	(chat-local-to-self "31 Attack an enemy now")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(attack-now)
	(enable-timer TIMER-CASTLE-ATTACK 200)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 10)
	(set-goal GOAL-FIRST-RUCH 0)
	(train spearman-line)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy <= feudal-age)
	(goal GOAL-MOBILISE-DEFENCE 0)
	(goal GOAL-RESEARCHING-CASTLE 1)
	(soldier-count > 20)
=>
	(chat-local-to-self "flush ngay la^.p tu*'c")
	(set-strategic-number sn-percent-attack-soldiers 80)
	(attack-now)
	(disable-self)
)
(defrule
	(current-age >= castle-age)
	(goal GOAL-MOBILISE-DEFENCE 0)
	(soldier-count >= 10)
=>
	(chat-to-all "8 Knight Rush ?  :D ")
	(set-strategic-number sn-percent-attack-soldiers 2)
	(attack-now)
	(enable-timer TIMER-SCOUT-ATTACK 180)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(timer-triggered TIMER-SCOUT-ATTACK)
	(goal GOAL-MOBILISE-DEFENCE 0)
	(soldier-count >= 10)
=>
	(chat-local-to-self "trinh sa't do^'i phu*o*ng")
	(set-strategic-number sn-percent-attack-soldiers 2)
	(attack-now)
	(disable-timer TIMER-SCOUT-ATTACK)
	(enable-timer TIMER-SCOUT-ATTACK 180)
)

(defrule
	(current-age == castle-age)
	(goal GOAL-FAST-ATTACK 1)
	(timer-triggered TIMER-ATTACK)
	(or (unit-type-count-total militiaman-line >= 15)
		(military-population >= 30))
=>
	(set-strategic-number sn-percent-attack-soldiers 90)
	(attack-now)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 150)
	(set-strategic-number sn-number-defend-groups 0)
)

(defrule
	(current-age == castle-age)
	(or (unit-type-count-total militiaman-line > 30)
		(military-population >= 50))
	(goal GOAL-FAST-ATTACK 1)
=>
	(chat-local-to-self "31 Attack an enemy now")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-defend-groups 0)
	(attack-now)
	(enable-timer TIMER-CASTLE-ATTACK 260)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 45)
	(set-goal GOAL-FIRST-RUCH 0)
	(disable-self)
)

(defrule
	(current-age == imperial-age)
	(or (goal GOAL-PROTEST-KNIGHT 1)
		(goal GOAL-START-THE-IMPERIAL-ARMY 1))
	(timer-triggered TIMER-ATTACK)
	(or (unit-type-count-total militiaman-line >= 30)
		(military-population >= 60))
=>
	(set-strategic-number sn-percent-attack-soldiers 80)
	(attack-now)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 60)
	(set-strategic-number sn-number-defend-groups 0)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 1)
		(goal GOAL-START-THE-IMPERIAL-ARMY 1))
	(or (unit-type-count-total militiaman-line >= 40)
		(military-population >= 75))
=>
	(set-goal GOAL-FAST-ATTACK 0)
	(set-strategic-number sn-minimum-attack-group-size 8)
	(set-strategic-number sn-maximum-attack-group-size 30)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(attack-now)
	(chat-to-all "21 Nice town, I'll take it!")
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 30)
	(set-strategic-number sn-number-defend-groups 0)
	(disable-self)
)

; SPECIAL
; support Turks, Persians, Huns, Mayans
#load-if-defined TURKISH-CIV
(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-chain-mail)
=>
	(chat-local-to-self "Na^ng ca^'p chain-mail")
	(cc-add-resource food 100)
	(cc-add-resource wood 100)
	(research ri-chain-mail)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-iron-casting)
=>
	(chat-local-to-self "Na^ng ca^'p iron-casting")
	(cc-add-resource food 100)
	(cc-add-resource wood 100)
	(research ri-iron-casting)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed long-swordsman))
	(current-age >= castle-age)
	(unit-type-count-total skirmisher-line > 10)
	(can-research ri-bodkin-arrow)
=>
	(chat-local-to-self "Na^ng ca^'p bodkin arrow")
	(research ri-bodkin-arrow)
	(cc-add-resource food 100)
	(cc-add-resource wood 100)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-plate-mail)
=>
	(chat-local-to-self "Na^ng ca^'p plate-mail")
	(research ri-plate-mail)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-padded-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p padded-archer-armor")
	(research ri-padded-archer-armor)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 30)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-leather-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p leather-archer-armor")
	(research ri-leather-archer-armor)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 35)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-ring-archer-armor)
=>
	(chat-local-to-self "Na^ng ca^'p ring-archer-armor")
	(research ri-ring-archer-armor)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 25)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(can-research ri-bracer)
=>
	(chat-local-to-self "Na^ng ca^'p bracer")
	(research ri-bracer)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-two-handed-swordsman)
=>
	(chat-local-to-self "Na^ng ca^'p two-handed-swordsman")
	(research ri-two-handed-swordsman)
)

(defrule
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line > 15)
	(can-research ri-champion)
=>
	(chat-local-to-self "Na^ng ca^'p champion")
	(research ri-champion)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 1)
)

(defrule
	(current-age >= castle-age)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line < 18)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(goal GOAL-FAST-ATTACK 1)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line < 30)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age >= castle-age)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line < 20)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(or (goal GOAL-FAST-ATTACK 1)
		(goal GOAL-MOBILISE-DEFENCE 1))
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 4)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal GOAL-RESEARCHING-IMPERIAL 1)
	(goal GOAL-PROTEST-KNIGHT 0)
	(food-amount > 900)
	(gold-amount > 700)
	(unit-type-count-total militiaman-line < 60)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(or (goal GOAL-PROTEST-KNIGHT 0)
		(research-completed ri-long-swordsman))
	(unit-type-count-total militiaman-line < 85)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-START-THE-IMPERIAL-ARMY 1)
	(food-amount > 100)
	(gold-amount < 20)
;	(research-completed ri-long-swordsman)
	(can-train spearman)
	(unit-type-count-total spearman-line < 28)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(food-amount > 1000)
	(can-sell-commodity food)
	(commodity-selling-price food > 120)
=>
	(sell-commodity food)
	(chat-local-to-self "ba'n food")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total market > 0)
	(food-amount > 1500)
	(can-sell-commodity food)
	(commodity-selling-price food > 100)
=>
	(sell-commodity food)
	(chat-local-to-self "ba'n food")
)

#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(current-age >= castle-age)
	(can-research ri-halberdier)
=>
	(chat-local-to-self "Na^ng ca^'p halberdier")
	(research ri-halberdier)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 1)
)

(defrule 	
	(building-type-count-total castle >= 2)
	(can-research ri-chemistry)
=> 	
	(research ri-chemistry)
 	(chat-local-to-self "Na^ng ca^'p chemistry")
	(disable-self)
)

(defrule
 	(building-type-count-total castle >= 2)
 	(can-research ri-ballistics)
=> 		
	(chat-local-to-self "Na^ng ca^'p ballistics")
	(research ri-ballistics)
 	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

#end-if

#load-if-defined HUN-CIV
(defrule
	(current-age >= castle-age)
	(can-research ri-two-handed-swordsman)
=>
	(chat-local-to-self "Na^ng ca^'p two-handed-swordsman")
	(research ri-two-handed-swordsman)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 1)
)

(defrule
 	(building-type-count-total castle >= 2)
 	(can-research ri-chemistry)
=>
	(research ri-chemistry)
 	(chat-local-to-self "Na^ng ca^'p chemistry")
	(disable-self)
)

(defrule
	(building-type-count-total castle >= 2)
 	(can-research ri-ballistics)
=> 		
	(chat-local-to-self "Na^ng ca^'p ballistics")
	(research ri-ballistics)
 	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

#end-if

#load-if-defined MAYAN-CIV
(defrule
	(game-time >= 0)
	(can-research ri-loom)
=>
	(research ri-loom)
	(chat-local-to-self "Na^ng ca^'p loom")
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-two-handed-swordsman)
=>
	(chat-local-to-self "Na^ng ca^'p two-handed-swordsman")
	(research ri-two-handed-swordsman)
	(set-goal GOAL-START-THE-IMPERIAL-ARMY 1)
)

(defrule
 	(building-type-count-total castle >= 2)
 	(can-research ri-chemistry)
=>
	(research ri-chemistry)
 	(chat-local-to-self "Na^ng ca^'p chemistry")
	(disable-self)
)

(defrule 	
	(building-type-count-total castle >= 2)
	(can-research ri-ballistics)
=> 		
	(chat-local-to-self "Na^ng ca^'p ballistics")
	(research ri-ballistics)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-blast-furnace)
=>
	(chat-local-to-self "Na^ng ca^'p blast-furnace")
	(research ri-blast-furnace)
)

#end-if

; Location nomad
#load-if-defined NOMAD-MAP
(defrule	(true)
=>		(chat-to-all "Nomad map a`?. Xa^y Town Center ngay!!")
		(disable-self)
)
(defrule	(building-type-count town-center == 0)
		(game-time < 60)
=>		(build town-center)
)
(defrule
	(building-type-count town-center > 0)
	(not (can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
	(chat-local-to-self "Na^ng ca^'p Loom")
	(disable-self)
)

(defrule
 	(current-age == dark-age)
	(game-time < 250)
=>	
	(set-strategic-number sn-percent-civilian-explorers 80 )
  	(set-strategic-number sn-percent-civilian-builders 20 )
     	(set-strategic-number sn-percent-civilian-gatherers 0 )
     	(set-strategic-number sn-cap-civilian-explorers 5 )
	(set-strategic-number sn-total-number-explorers 5)
	(set-strategic-number sn-cap-civilian-builders 2 )
	(set-strategic-number sn-initial-exploration-required 1)
	(disable-self)
)

(defrule 	
	(current-age == dark-age)
	(game-time > 250)
=>	
	(set-strategic-number sn-percent-civilian-explorers 100 )
	(set-strategic-number sn-cap-civilian-explorers 3 )
	(set-strategic-number sn-cap-civilian-builders 2 )
	(set-strategic-number sn-total-number-explorers 3)
)

(defrule
	(current-age == feudal-age)
=>
	(set-strategic-number sn-camp-max-distance 35)
)

(defrule
	(current-age == feudal-age)
	(players-population any-enemy <= 24)
	(goal GOAL-FAST-ATTACK 1)
	(timer-triggered TIMER-ATTACK)
	(or (unit-type-count-total militiaman-line >= 3)
		(military-population >= 10))
=>
	(set-strategic-number sn-percent-attack-soldiers 90)
	(attack-now)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 100)
	(set-strategic-number sn-number-defend-groups 0)
)

(defrule
	(current-age == feudal-age)
	(players-population any-enemy <= 24)
	(or (unit-type-count-total skirmisher-line > 6)
		(military-population >= 12))
	(goal GOAL-FAST-ATTACK 1)
=>
	(set-strategic-number sn-number-explore-groups 1) 
	(chat-local-to-self "31 Attack an enemy now")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(attack-now)
	(enable-timer TIMER-CASTLE-ATTACK 200)
	(disable-timer TIMER-ATTACK)
	(enable-timer TIMER-ATTACK 10)
	(set-goal GOAL-FIRST-RUCH 0)
	(train spearman-line)
	(disable-self)
)

#end-if

; Bare cheats
; cheats to research Feudal
(defrule
	(unit-type-count-total villager >= 21)
=>
	(cc-add-resource food 350)
	(cc-add-resource wood 200)
	(disable-self)
)

; cheats to research Castle
(defrule
	(unit-type-count-total villager >= 24)
=>
	(cc-add-resource food 300)
	(cc-add-resource wood 200)
	(cc-add-resource gold 50)
	(disable-self)
)

(defrule
	(game-time <= 90)
	(goal GOAL-CHEATS-NOW 0)
	(or	(taunt-detected any-ally 102)
		(taunt-detected any-enemy 102))
=>
	(chat-to-all "1 Once on a tiger's back, it is hard to alight - CHEATS NOW!!!")
	(set-goal GOAL-CHEATS-NOW 1)
	(acknowledge-taunt this-any-enemy 102)
	(disable-self)
)

(defrule
	(game-time > 90)
	(goal GOAL-CHEATS-NOW 0)
	(or	(taunt-detected any-ally 102)
		(taunt-detected any-enemy 102))
=>
	(chat-to-all "2 It's too late for CHEATS-NOW.")
	(acknowledge-taunt this-any-enemy 102)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
=>
	(cc-add-resource food 50)
	(cc-add-resource wood 50)
	(cc-add-resource gold 50)
	(cc-add-resource stone 50)
	(enable-timer TIMER-CHEATS-NOW 50)
	(disable-self)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty > hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(food-amount < 800)
=>
	(cc-add-resource food 150)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty > hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(wood-amount < 500)
=>
	(cc-add-resource wood 150)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty > hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(gold-amount < 800)
=>
	(cc-add-resource gold 100)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty > hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(stone-amount < 800)
=>
	(cc-add-resource stone 100)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty <= hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(food-amount < 800)
=>
	(cc-add-resource food 500)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty <= hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(wood-amount < 500)
=>
	(cc-add-resource wood 380)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty <= hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(gold-amount < 800)
=>
	(cc-add-resource gold 300)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(goal GOAL-CHEATS-NOW 1)
	(difficulty <= hard)
	(timer-triggered TIMER-CHEATS-NOW)
	(stone-amount < 800)
=>
	(cc-add-resource stone 300)
	(disable-timer TIMER-CHEATS-NOW)
	(enable-timer TIMER-CHEATS-NOW 30)
)

(defrule
	(current-age == feudal-age)
	(goal GOAL-CHEATS-NOW 1)
=>
	(set-strategic-number sn-maximum-town-size 22)
	(disable-self)
)
(defrule
	(current-age == castle-age)
	(goal GOAL-CHEATS-NOW 1)
=>
	(set-strategic-number sn-maximum-town-size 24)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
	(goal GOAL-CHEATS-NOW 1)
=>
	(chat-to-all "9 One cannot refuse to eat just because there is a chance of being choked ")
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(goal GOAL-CHEATS-NOW 1)
=>
	(chat-to-all "9 How can you expect to find ivory in a dog's mouth? ")
	(disable-self)
)

(defrule
	(current-age == imperial-age)
	(goal GOAL-CHEATS-NOW 1)
=>
	(chat-to-all "11 Of all the strategies, to know when to quit is the best ")
	(disable-self)
)
